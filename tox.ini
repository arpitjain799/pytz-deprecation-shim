[tox]
minversion = 3.3.0
isolated_build = True
skip_missing_interpreters = true

[testenv]
description = Run the tests
deps =
    coverage[toml]
    hypothesis>=5.7.0
    pytz
    pytest
    pytest-cov
    pytest-randomly
    pytest-subtests
    pytest-xdist
setenv =
    COVERAGE_FILE={toxworkdir}/.coverage/.coverage.{envname}
commands =
    pytest {toxinidir} {posargs: --cov=pytz_deprecation_shim --cov=tests}

[testenv:coverage-report]
skip_install = true
deps = coverage[toml]>=5.0.2
depends = py38
setenv=COVERAGE_FILE=.coverage
changedir = {toxworkdir}/.coverage
commands =
    coverage combine
    coverage report
    coverage xml

[testenv:codecov]
description = [only run on CI]: upload coverage data to codecov (depends on coverage running first)
deps = codecov==2.1.1
depends = coverage-report
passenv = CODECOV_TOKEN
skip_install = True
commands =
    python scripts/upload_codecov.py {toxworkdir}/.coverage

[testenv:format]
description = Run auto formatters
skip_install = True
whitelist_externals =
    bash
deps =
    black
    isort
commands =
    black .
    isort -rc src tests

[testenv:lint]
description = Run linting checks
skip_install = True
deps =
    black
    isort
    pylint
commands =
    black --check .
    isort --check-only --recursive src tests
    pylint src tests

[testenv:docs]
description = Build the documentation
skip_install = True
deps =
    -rdocs/requirements.txt
commands =
    sphinx-build -d "{toxworkdir}/docs_doctree" "{toxinidir}/docs" \
                    "{toxinidir}/docs/_output" {posargs: -j auto --color -bhtml}

[testenv:build]
description = Build a wheel and source distribution
skip_install = True
passenv = *
deps =
    pep517
commands =
    python -m pep517.build {posargs} {toxinidir} -o {toxinidir}/dist

[testenv:build-check]
description = Build a wheel and source distribution
skip_install = True
deps =
    twine
depends = build
commands =
    twine check dist/*

[testenv:release]
description = Make a release; must be called after "build"
skip_install = True
deps =
    twine
depends =
    build
    auditwheel
passenv =
    TWINE_*
commands =
    twine check {toxinidir}/dist/*
    twine upload {toxinidir}/dist/* \
                 {posargs:-r {env:TWINE_REPOSITORY:testpypi} --non-interactive}
